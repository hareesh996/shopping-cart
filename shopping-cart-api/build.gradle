plugins {
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
	id 'java'
	id "io.freefair.lombok"
}

group 'com.shoppingcart.api'
version '0.0.1-SNAPSHOT'

repositories {
    mavenLocal()
    jcenter()
	mavenCentral()
}

ext {
    mapstructVersion = "1.4.1.Final"
    swaggerConfig = "3.0.0"
}

dependencies {
    implementation project (':common-util')
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor 'org.hibernate:hibernate-jpamodelgen:5.4.21.Final'
    // 1. Use Guava in your implementation only:
    implementation "com.google.guava:guava:30.1-jre"
    compile group: 'io.springfox', name: 'springfox-boot-starter', version: "${swaggerConfig}"
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: "${swaggerConfig}"
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    //runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.1.Final'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.verbose=true'
    ]
}
